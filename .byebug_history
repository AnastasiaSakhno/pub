continue
@cast
@materials
continue
@materials
@cast
continue
@cast
@materials
continue
@materials
@cast
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
scoped
continue
@article.material
@article.cast
@material
@cast
@article
continue
@article.cast
continue
@article.material
@article.cast
@article
continue
@articles
continue
@cast
cast
continue
render template: 'admin/casts/index'
render template: 'admin/casts'
render 'admin/casts'
render 'materials'
render 'admin/materials'
render 'admin/materials/index', cast: @cast
render template: 'admin/materials', cast: @cast
render 'admin/materials', cast: @cast
continue
article
@article
continue
scoped
continue
Cast.find_by_id(params[:cast_id])
continue
select_tag :material_id, options_from_collection_for_select(Material.all, :id, :name, @material.try(:id))
select_tag :cast_id, options_from_collection_for_select(Cast.all, :id, :name, @cast.try(:id))
continue
form_for([:admin, @cast, @material, @article]) { |f| p f }
continue
@material.articles.new
@material.articles
@material.build_article
@material
continue
render 'form'
<%= render 'form' %>
continue
link_to (t :destroy), admin_cast_path(cast), method: :delete, data: { confirm: 'Are you sure?' }
link_to (t :edit), edit_admin_cast_path(cast)
continue
link_to (t :show), admin_cast_path(cast)
link_to (t :show), cast
continue
(cast ? [cast] : Cast.all).map(&:materials).flatten.uniq.map(&:id)
(cast ? [cast] : Cast.all).map(&:materials).flatten.uniq
(cast ? [cast] : Cast.all).map(&:materials).each { |m| p m.id }
(cast ? [cast] : Cast.all).map(&:materials)
cast
continue
(cast ? [cast] : Cast.all).map(&:materials)
([] || Cast.all).map(&:materials)
([cast] || Cast.all).map(&:materials)
(cast || Cast.all).to_a.map(&:materials)
(cast || Cast.all).map(&:materials)
continue
params
continue
params
continue
params
continue
j(render 'articles', locale: {articles: @articles = @articles})
continue
j(render 'articles', locale: {articles: @articles = @articles})
@articles
articles
continue
scoped
continue
scoped
scoped = scoped.by_name(params[:name])
scoped
scoped=scoped.by_material_id(params[:cast][:material_ids])
scoped.by_material_id(params[:cast][:material_ids])
scoped=scoped.by_cast_id(params[:cast_id])
scoped.by_cast_id(params[:cast_id])
scoped=Article.scoped
scoped
continue
params[:cast][:material_ids]
scoped
continue
params
continue
j(render 'filter', cast: @cast) 
@cast
j(render 'filter', locale: { cast: @cast }) 
continue
params
continue
params
continue
params
continue
params
continue
params
continue
f.label :cast_id
f
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
Article.scoped
articles = Article.by_cast_id(params[:cast_id]).by_name 'test'
continue
scoped.by_cast_id(params[:cast_id]) if params[:cast_id]
scoped = Article.all
continue
articles = articles.by_cast_id(params[:cast_id]) if params[:cast_id]
articles = Article.by_cast_id(params[:cast_id]) if params[:cast_id]
articles = articles.by_cast_id(params[:cast_id]) if params[:cast_id]
params
articles = Article.all
continue
apply_scopes(Article).all
params
continue
@articles
continue
render 'articles'
continue
render 'articles'
continue
@articles
continue
@articles
articles
continue
Poster.scoped
continue
apply_scopes(Article).all
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_cast_id(1).first
continue
Article.by_material_id(1).first
Article.by_cast_id(1).first
Article.by_cast_id 1
Article.by_name('test')
Article.by_name('test').first
continue
Article.reload
Article.reload!
reload!
Article.by_name('test').first
Article.by_name 'test'
Article.by_cast_id 1
Article.by_cast_id 2
Article.by_cast_id 3
Artcile.by_cast_id 3
params
Article.all
apply_scopes(Article).all
continue
@articles
continue
@articles
render 'articles', locale: {articles: @articles = @articles}
escape_javascript(render 'articles', locale: {articles: @articles = @articles})
<%= escape_javascript(render 'articles', locale: {articles: @articles = @articles}) %>
"<%= escape_javascript(render 'articles', locale: {articles: @articles = @articles}) %>"
continue
render 'articles'
continue
render 'materials_filter'
continue
render 'materials_filter'
continue
render 'materials_filter'
continue
apply_scopes(Article).all
@cast
continue
params
continue
articles_path
welcome_articles_path
continue
params
continue
@cast
continue
@cast
continue
@cast
@cast.try(:materials).try(:each)
continue
check_box_tag :material_ids, Cast.first.materials.first.id, true, name: 'cast[material_ids][]'
@cast.try(:materials).try(:each)
@cast.try(:materials).each
@cast.try(:materials)
continue
Cast.first.collection_check_boxes :material_ids, Material.all, :id, :name, {}, {class: 'checkbox'}
collection_check_boxes Cast.first, :material_ids, Material.all, :id, :name, {}, {class: 'checkbox'}
